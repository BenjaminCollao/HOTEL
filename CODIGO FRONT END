import requests
from kivy.app import App
from kivy.uix.boxlayout import BoxLayout
from kivy.uix.button import Button
from kivy.uix.image import Image
from kivy.uix.label import Label
from kivy.uix.textinput import TextInput
from kivy.uix.screenmanager import ScreenManager, Screen
from kivy.uix.popup import Popup

class InicioScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        layout = BoxLayout(orientation='vertical', padding=20, spacing=10)

        layout.add_widget(Label(text="LOGO AQUÍ", font_size=24))

        btn_login = Button(text='Iniciar sesión', size_hint=(None, None), size=(200, 50))
        btn_login.bind(on_press=self.go_to_login)
        layout.add_widget(btn_login)

        btn_register = Button(text='Registrarse', size_hint=(None, None), size=(200, 50))
        btn_register.bind(on_press=self.go_to_register)
        layout.add_widget(btn_register)

        self.add_widget(layout)

    def go_to_register(self, instance):
        self.manager.current = 'registro'

    def go_to_login(self, instance):
        self.manager.current = 'login'

class RegistroScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        layout = BoxLayout(orientation='vertical', padding=20, spacing=10)

        layout.add_widget(Label(text="Nombre y Apellido"))
        self.nombre_apellido = TextInput()
        layout.add_widget(self.nombre_apellido)

        layout.add_widget(Label(text="Correo Electrónico"))
        self.correo = TextInput()
        layout.add_widget(self.correo)

        layout.add_widget(Label(text="Contraseña"))
        self.contrasena = TextInput(password=True)
        layout.add_widget(self.contrasena)

        btn_registrar = Button(text="REGISTRAR", size_hint=(None, None), size=(200, 50))
        btn_registrar.bind(on_press=self.registrar_usuario)
        layout.add_widget(btn_registrar)

        btn_volver = Button(text="Volver", size_hint=(None, None), size=(100, 40))
        btn_volver.bind(on_press=self.volver_inicio)
        layout.add_widget(btn_volver)

        self.add_widget(layout)

    def registrar_usuario(self, instance):
        data = {
            "nombre": self.nombre_apellido.text,
            "correo": self.correo.text,
            "contrasena": self.contrasena.text
        }
        try:
            response = requests.post("http://localhost:5000/registro", json=data)
            mensaje = response.json().get("mensaje", "Error")
            self.mostrar_popup("Registro", mensaje)
            if response.status_code == 201:
                self.manager.current = 'login'
        except Exception as e:
            self.mostrar_popup("Error", str(e))

    def mostrar_popup(self, titulo, mensaje):
        popup = Popup(title=titulo,
                      content=Label(text=mensaje),
                      size_hint=(None, None), size=(300, 200))
        popup.open()

    def volver_inicio(self, instance):
        self.manager.current = 'inicio'

class LoginScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        layout = BoxLayout(orientation='vertical', padding=20, spacing=10)

        layout.add_widget(Label(text="Correo Electrónico"))
        self.correo = TextInput()
        layout.add_widget(self.correo)

        layout.add_widget(Label(text="Contraseña"))
        self.contrasena = TextInput(password=True)
        layout.add_widget(self.contrasena)

        btn_iniciar = Button(text="INICIAR", size_hint=(None, None), size=(200, 50))
        btn_iniciar.bind(on_press=self.go_to_fecha)
        layout.add_widget(btn_iniciar)

        layout.add_widget(Label(text="[u]Recuperar contraseña[/u]", markup=True, font_size=12))

        btn_volver = Button(text="Volver", size_hint=(None, None), size=(100, 40))
        btn_volver.bind(on_press=self.volver_inicio)
        layout.add_widget(btn_volver)

        self.add_widget(layout)

    def go_to_fecha(self, instance):
        data = {
            "correo": self.correo.text,
            "contrasena": self.contrasena.text
        }
        try:
            response = requests.post("http://localhost:5000/login", json=data)
            mensaje = response.json().get("mensaje", "Error")
            self.mostrar_popup("Login", mensaje)
            if response.status_code == 200:
                self.manager.current = 'fecha'
        except Exception as e:
            self.mostrar_popup("Error", str(e))

    def mostrar_popup(self, titulo, mensaje):
        popup = Popup(title=titulo,
                      content=Label(text=mensaje),
                      size_hint=(None, None), size=(300, 200))
        popup.open()

    def volver_inicio(self, instance):
        self.manager.current = 'inicio'

class FechaScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        layout = BoxLayout(orientation='vertical', padding=20, spacing=10)

        self.btn_fecha_entrada = Button(text="FECHA ENTRADA", size_hint=(None, None), size=(200, 50))
        layout.add_widget(self.btn_fecha_entrada)

        self.btn_fecha_salida = Button(text="FECHA SALIDA", size_hint=(None, None), size=(200, 50))
        layout.add_widget(self.btn_fecha_salida)

        self.btn_buscar = Button(text="BUSCAR", size_hint=(None, None), size=(150, 40))
        self.btn_buscar.bind(on_press=self.go_to_resultados)
        layout.add_widget(self.btn_buscar)

        btn_volver = Button(text="Volver", size_hint=(None, None), size=(100, 40))
        btn_volver.bind(on_press=self.volver_inicio)
        layout.add_widget(btn_volver)

        self.add_widget(layout)

    def go_to_resultados(self, instance):
        self.manager.current = 'resultados'

    def volver_inicio(self, instance):
        self.manager.current = 'inicio'

class ResultadosScreen(Screen):
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        layout = BoxLayout(orientation='horizontal', padding=20, spacing=10)

        try:
            response = requests.get("http://localhost:5000/habitaciones")
            data = response.json()
            habitacion = data[0] if data else {}

            self.img_habitacion = Image(source="habitacion.jpg", size_hint=(None, None), size=(150, 150))
            layout.add_widget(self.img_habitacion)

            info_layout = BoxLayout(orientation='vertical', spacing=10)
            info_layout.add_widget(Label(text=f"Habitación: {habitacion.get('id', '---')}"))
            info_layout.add_widget(Label(text=f"Camas: {habitacion.get('camas', '---')}"))
            info_layout.add_widget(Label(text=f"Precio: ${habitacion.get('precio', '---')}"))

            btn_detalles = Button(text="DETALLES", size_hint=(None, None), size=(100, 40))
            btn_detalles.bind(on_press=self.go_to_detalles)
            info_layout.add_widget(btn_detalles)

            layout.add_widget(info_layout)

        except Exception as e:
            layout.add_widget(Label(text=f"Error cargando habitación: {e}"))

        btn_volver = Button(text="Volver", size_hint=(None, None), size=(100, 40))
        btn_volver.bind(on_press=self.volver_fecha)
        layout.add_widget(btn_volver)

        self.add_widget(layout)

    def go_to_detalles(self, instance):
        self.manager.current = 'detalles'

    def volver_fecha(self, instance):
        self.manager.current = 'fecha'

class HotelApp(App):
    def build(self):
        sm = ScreenManager()
        sm.add_widget(InicioScreen(name='inicio'))
        sm.add_widget(RegistroScreen(name='registro'))
        sm.add_widget(LoginScreen(name='login'))
        sm.add_widget(FechaScreen(name='fecha'))
        sm.add_widget(ResultadosScreen(name='resultados'))
        return sm

if __name__ == '__main__':
    HotelApp().run()
